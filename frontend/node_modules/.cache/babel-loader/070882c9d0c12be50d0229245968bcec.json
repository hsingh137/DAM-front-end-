{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tecti\\\\Desktop\\\\front end\\\\test\\\\frontend\\\\src\\\\App.js\";\nimport React, { Component, useState } from 'react';\nimport './App.css';\nimport Form from 'react-bootstrap/Form';\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport ToggleButtonGroup from 'react-bootstrap/ToggleButtonGroup';\nimport Card from 'react-bootstrap/Card';\nimport CardGroup from 'react-bootstrap/CardGroup';\nimport CardDeck from 'react-bootstrap/CardDeck';\nimport ToggleButton from 'react-bootstrap/ToggleButton';\nimport { ControlLabel } from 'react-bootstrap';\nimport Select from 'react-select';\nimport makeAnimated from 'react-select/animated';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass MasterForm extends React.Component {\n  componentDidMount() {\n    this.props.hideLoader();\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.handlelist = e => {\n      var emp_list;\n      emp_list = [];\n      let currentStep = this.state.currentStep;\n      var a;\n\n      for (a in e) {\n        emp_list.push(e[a]['value']);\n      }\n\n      if (currentStep == 4) {\n        this.state.formData.allergens = emp_list;\n      } else if (currentStep == 5) {\n        this.state.formData.tags = emp_list;\n      }\n    };\n\n    this.handleChange = event => {\n      const value = event.target.value;\n      const name = event.target.name;\n      let target = event.target;\n      var formData = this.state.formData;\n      formData[name] = value;\n      this.setState({\n        formData\n      });\n    };\n\n    this.handleResponse = r => {\n      var res;\n      res = r.result[0]; // turn recipes into list of lists \n\n      var result = this.state.result;\n      result['cost'] = res['Total cost'];\n      result['recipes'] = res['recipes'];\n      this.setState({\n        result,\n        isLoading: false\n      });\n      console.log(this.state.result['recipes']);\n    };\n\n    this.handlePredictClick = () => {\n      const formData = this.state.formData;\n      console.log(formData);\n      this.setState({\n        isLoading: true\n      });\n      fetch('http://127.0.0.1:5000/prediction/', {\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        method: 'POST',\n        body: JSON.stringify(formData)\n      }).then(response => response.json()).then(response => this.handleResponse(response));\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      let currentStep = this.state.currentStep;\n      console.log('pressed enttered');\n\n      if (currentStep == 5) {\n        this.handlePredictClick();\n      } else {\n        this._next();\n      }\n    };\n\n    this._handleKeyDown = e => {\n      let currentStep = this.state.currentStep;\n\n      if (e.key === 'Enter') {\n        if (currentStep == 5) {\n          this.handlePredictClick();\n        } else {\n          this._next();\n        }\n      }\n    };\n\n    this._next = () => {\n      let currentStep = this.state.currentStep;\n      currentStep = currentStep >= 4 ? 5 : currentStep + 1;\n      this.setState({\n        currentStep: currentStep\n      });\n    };\n\n    this._prev = () => {\n      let currentStep = this.state.currentStep;\n      currentStep = currentStep <= 1 ? 1 : currentStep - 1;\n      this.setState({\n        currentStep: currentStep\n      });\n    };\n\n    this.state = {\n      isLoading: false,\n      currentStep: 1,\n      formData: {\n        name: 'Himanshu',\n        calories: '1',\n        protein: '1',\n        fats: '1',\n        carbs: '1',\n        allergens: [],\n        tags: []\n      },\n      result: {\n        cost: '',\n        recipes: []\n      }\n    };\n  } // handle the lsit input \n\n\n  //show resutls\n  showResults() {\n    let list1 = this.state.result.recipes.slice(0, 3);\n    console.log(list1);\n    let list2 = this.state.result.recipes.slice(3, 7);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(\"center\", {\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"View Recipes Here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 14\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(CardDeck, {\n          children: list1.map((value, index) => {\n            return /*#__PURE__*/_jsxDEV(Card, {\n              bg: \"lecondary\",\n              text: \"dark\",\n              children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n                children: [\"Recipe \", index + 1]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n                children: /*#__PURE__*/_jsxDEV(Card.Text, {\n                  children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                    children: value['Name']\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 116,\n                    columnNumber: 15\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"Calories: \", value['calories']]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 117,\n                    columnNumber: 15\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"Protein: \", value['Protein']]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 118,\n                    columnNumber: 17\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"Fats: \", value['fat']]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 119,\n                    columnNumber: 17\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"Carbohydrates: \", value['Carbohydrate']]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 120,\n                    columnNumber: 17\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 115,\n                  columnNumber: 15\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 13\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 13\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(CardDeck, {\n          children: list2.map((value, index) => {\n            return /*#__PURE__*/_jsxDEV(Card, {\n              bg: \"secondary\",\n              text: \"white\",\n              children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n                children: [\"Recipe \", index + 1]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n                children: /*#__PURE__*/_jsxDEV(Card.Text, {\n                  children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                    children: value['Name']\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 140,\n                    columnNumber: 15\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"Calories: \", value['calories']]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 141,\n                    columnNumber: 15\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"Protein: \", value['Protein']]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 142,\n                    columnNumber: 17\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"Fats: \", value['fat']]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 143,\n                    columnNumber: 17\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"Carbohydrates: \", value['Carbohydrate']]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 144,\n                    columnNumber: 17\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 139,\n                  columnNumber: 15\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 13\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 13\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 1\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 5\n    }, this);\n  }\n\n  /*\n  * the functions for our button\n  */\n  previousButton() {\n    let currentStep = this.state.currentStep;\n\n    if (currentStep !== 1) {\n      return /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"secondary float-left\",\n        onClick: this._prev,\n        children: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 7\n      }, this);\n    }\n\n    return null;\n  }\n\n  nextButton() {\n    let currentStep = this.state.currentStep;\n\n    if (currentStep < 5) {\n      return /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary float-right\",\n        onClick: this._next,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 7\n      }, this);\n    } else if (currentStep = 5) {\n      return /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary float-right\",\n        onClick: !this.state.isLoading ? this.handlePredictClick : null,\n        disabled: this.state.isLoading,\n        children: this.state.isLoading ? 'Loading…' : 'Submit '\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 5\n      }, this);\n    }\n\n    ;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"title\",\n            children: \"Food Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content\",\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            onSubmit: this.handleSubmit,\n            onKeyDown: this._handleKeyDown,\n            children: [/*#__PURE__*/_jsxDEV(Step1, {\n              currentStep: this.state.currentStep,\n              handleChange: this.handleChange,\n              email: this.state.formData.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(Step2, {\n              formData: this.state.formData,\n              currentStep: this.state.currentStep,\n              handleChange: this.handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(Step3, {\n              currentStep: this.state.currentStep,\n              handleChange: this.handleChange,\n              calories: this.state.formData.calories,\n              protein: this.state.formData.protein,\n              fats: this.state.formData.fats,\n              carbs: this.state.formData.carbs\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(Step4, {\n              currentStep: this.state.currentStep,\n              handleChange: this.handlelist,\n              allergens: this.state.formData.allergens\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(Step5, {\n              currentStep: this.state.currentStep,\n              handleChange: this.handlelist,\n              allergens: this.state.formData.tags\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 10\n            }, this), this.nextButton(), this.previousButton()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 7\n        }, this), this.state.result['recipes'].length == 0 ? null : this.showResults()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nfunction Step1(props) {\n  if (props.currentStep !== 1) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-group\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"email\",\n      children: \"Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n      type: \"text\",\n      placeholder: \"Enter Name\",\n      name: \"email\",\n      value: props.email,\n      defaultValue: \"Himanshu Singh\",\n      onChange: props.handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 342,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Step1;\n\nfunction Step2(args) {\n  const formData = args.formData;\n\n  if (args.currentStep !== 2) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-group\",\n    children: [\"Hi \", args.formData.email, \" lets get you less fat\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 374,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = Step2;\n\nfunction Step3(props) {\n  if (props.currentStep !== 3) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Row, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          controlId: \"formGridAddress1\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Calories\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 406,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"float\",\n            placeholder: \"Enter Calories\",\n            name: \"calories\",\n            value: props.calories,\n            defaultValue: \"1\",\n            onChange: props.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 407,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          controlId: \"formGridAddress2\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Protein\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 417,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"float\",\n            placeholder: \"Enter Protein\",\n            name: \"protein\",\n            value: props.protein,\n            defaultValue: \"1\",\n            onChange: props.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 418,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          controlId: \"formGridAddress4\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Fats\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 430,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"float\",\n            placeholder: \"Enter Fats\",\n            name: \"fats\",\n            value: props.fats,\n            defaultValue: \"1\",\n            onChange: props.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 431,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          controlId: \"formGridAddress4\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Carbs\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 441,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"float\",\n            placeholder: \"Enter Carbs\",\n            name: \"carbs\",\n            value: props.carbs,\n            defaultValue: \"1\",\n            onChange: props.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 442,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 440,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 402,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 388,\n    columnNumber: 5\n  }, this);\n}\n\n_c3 = Step3;\n;\n\nfunction Step4(args) {\n  const formData = args.formData;\n\n  if (args.currentStep !== 4) {\n    return null;\n  }\n\n  const options = [{\n    value: 'Celery',\n    label: 'Celery'\n  }, {\n    value: 'Crustaceans',\n    label: 'Crustaceans'\n  }, {\n    value: 'Egg',\n    label: 'Egg'\n  }, {\n    value: 'Fish',\n    label: 'Fish'\n  }, {\n    value: 'Gluten',\n    label: 'Gluten'\n  }, {\n    value: 'Milk',\n    label: 'Milk'\n  }, {\n    value: 'Mustard',\n    label: 'Mustard'\n  }, {\n    value: 'Nuts',\n    label: 'Nuts'\n  }, {\n    value: 'Peanuts',\n    label: 'Peanuts'\n  }, {\n    value: 'Sesame',\n    label: 'Sesame'\n  }, {\n    value: 'Soya',\n    label: 'Soya'\n  }, {\n    value: 'Sulphites',\n    label: 'Sulphites'\n  }];\n  const animatedComponents = makeAnimated();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Select, {\n      closeMenuOnSelect: false,\n      components: animatedComponents,\n      defaultValue: [options[4]],\n      isMulti: true,\n      options: options,\n      name: \"allergens\",\n      onChange: args.handleChange,\n      values: args.allergens\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 487,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 498,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 486,\n    columnNumber: 5\n  }, this);\n}\n\n_c4 = Step4;\n\nfunction Step5(args) {\n  const formData = args.formData;\n\n  if (args.currentStep !== 5) {\n    return null;\n  }\n\n  const options = [{\n    value: 'Spicy',\n    label: 'Spicy'\n  }, {\n    value: 'Vegan',\n    label: 'Vegan'\n  }, {\n    value: 'Quick',\n    label: 'Quick'\n  }, {\n    value: 'Veggie',\n    label: 'Veggie'\n  }, {\n    value: 'Low Salt',\n    label: 'Low Salt'\n  }, {\n    value: 'Summer',\n    label: 'Summer'\n  }, {\n    value: 'Quick',\n    label: 'Quick'\n  }, {\n    value: 'Plant-based',\n    label: 'Plant-based'\n  }]; // {'Low Sat Fat', 'High Fiber', 'Equipment Needed', 'Quick', 'Rapid', 'Under 750 calories', 'Chicken', 'Dairy Free', 'Lactose Free', 'Vegan', 'Family Friendly', 'Extra spicy', 'Calorie Smart', 'Balanced', \n  // 'Family Box', 'Healthy', 'Pork', 'Veggie', 'Beef', 'Not Suitable for Coeliacs', 'Exploration', 'One Pot Wonder', 'Low Fat', 'Fish', \n  // 'Under 550 calories', \"Chef's Choice\", 'Low Salt', 'No Gluten Containing Ingredients', '\n  // Summer', 'Naturally Gluten-Free', 'Under 600 calories', 'Spicy', 'Plant-based', 'Eat First', 'Salad'}\n\n  const animatedComponents = makeAnimated();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Select, {\n      closeMenuOnSelect: false,\n      components: animatedComponents,\n      defaultValue: [options[0]],\n      isMulti: true,\n      options: options,\n      name: \"allergens\",\n      onChange: args.handleChange,\n      values: args.tags\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 535,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 546,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 534,\n    columnNumber: 5\n  }, this);\n}\n\n_c5 = Step5;\nexport default MasterForm; //ReactDOM.render(<MasterForm />, document.getElementById('root'))\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"Step1\");\n$RefreshReg$(_c2, \"Step2\");\n$RefreshReg$(_c3, \"Step3\");\n$RefreshReg$(_c4, \"Step4\");\n$RefreshReg$(_c5, \"Step5\");","map":{"version":3,"sources":["C:/Users/tecti/Desktop/front end/test/frontend/src/App.js"],"names":["React","Component","useState","Form","Col","Container","Row","Button","Modal","ToggleButtonGroup","Card","CardGroup","CardDeck","ToggleButton","ControlLabel","Select","makeAnimated","MasterForm","componentDidMount","props","hideLoader","constructor","handlelist","e","emp_list","currentStep","state","a","push","formData","allergens","tags","handleChange","event","value","target","name","setState","handleResponse","r","res","result","isLoading","console","log","handlePredictClick","fetch","headers","method","body","JSON","stringify","then","response","json","handleSubmit","preventDefault","_next","_handleKeyDown","key","_prev","calories","protein","fats","carbs","cost","recipes","showResults","list1","slice","list2","map","index","previousButton","nextButton","render","email","length","Step1","Step2","args","Step3","Step4","options","label","animatedComponents","Step5"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,OAAO,WAAP;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAO,kCAAP;AACA,OAAOC,iBAAP,MAA8B,mCAA9B;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,SAASC,YAAT,QAA6B,iBAA7B;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,YAAP,MAAyB,uBAAzB;;;AAEA,MAAMC,UAAN,SAAyBjB,KAAK,CAACC,SAA/B,CAAyC;AAEvCiB,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,KAAL,CAAWC,UAAX;AACD;;AAEDC,EAAAA,WAAW,CAACF,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAyBnBG,UAzBmB,GAyBLC,CAAD,IAAO;AAClB,UAAIC,QAAJ;AACDA,MAAAA,QAAQ,GAAG,EAAX;AACA,UAAIC,WAAW,GAAG,KAAKC,KAAL,CAAWD,WAA7B;AACC,UAAIE,CAAJ;;AACA,WAAIA,CAAJ,IAASJ,CAAT,EAAY;AACVC,QAAAA,QAAQ,CAACI,IAAT,CAAcL,CAAC,CAACI,CAAD,CAAD,CAAK,OAAL,CAAd;AACD;;AACD,UAAIF,WAAW,IAAK,CAApB,EAAsB;AACpB,aAAKC,KAAL,CAAWG,QAAX,CAAoBC,SAApB,GAAiCN,QAAjC;AACD,OAFD,MAEM,IAAGC,WAAW,IAAK,CAAnB,EAAqB;AACzB,aAAKC,KAAL,CAAWG,QAAX,CAAoBE,IAApB,GAA4BP,QAA5B;AACD;AAEF,KAvCkB;;AAAA,SAyCnBQ,YAzCmB,GAyCHC,KAAD,IAAW;AACxB,YAAMC,KAAK,GAAGD,KAAK,CAACE,MAAN,CAAaD,KAA3B;AACA,YAAME,IAAI,GAAGH,KAAK,CAACE,MAAN,CAAaC,IAA1B;AACA,UAAID,MAAM,GAAGF,KAAK,CAACE,MAAnB;AACA,UAAIN,QAAQ,GAAG,KAAKH,KAAL,CAAWG,QAA1B;AACAA,MAAAA,QAAQ,CAACO,IAAD,CAAR,GAAiBF,KAAjB;AACA,WAAKG,QAAL,CAAc;AACZR,QAAAA;AADY,OAAd;AAGD,KAlDkB;;AAAA,SAoDrBS,cApDqB,GAoDHC,CAAD,IAAM;AAErB,UAAIC,GAAJ;AACAA,MAAAA,GAAG,GAAGD,CAAC,CAACE,MAAF,CAAS,CAAT,CAAN,CAHqB,CAIvB;;AACE,UAAIA,MAAM,GAAG,KAAKf,KAAL,CAAWe,MAAxB;AACAA,MAAAA,MAAM,CAAC,MAAD,CAAN,GAAiBD,GAAG,CAAC,YAAD,CAApB;AACAC,MAAAA,MAAM,CAAC,SAAD,CAAN,GAAoBD,GAAG,CAAC,SAAD,CAAvB;AACA,WAAKH,QAAL,CAAc;AACVI,QAAAA,MADU;AAEZC,QAAAA,SAAS,EAAE;AAFC,OAAd;AAIAC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKlB,KAAL,CAAWe,MAAX,CAAkB,SAAlB,CAAZ;AAGD,KAnEoB;;AAAA,SAwIrBI,kBAxIqB,GAwIA,MAAM;AACvB,YAAMhB,QAAQ,GAAG,KAAKH,KAAL,CAAWG,QAA5B;AACAc,MAAAA,OAAO,CAACC,GAAR,CAAYf,QAAZ;AACA,WAAKQ,QAAL,CAAc;AAACK,QAAAA,SAAS,EAAE;AAAZ,OAAd;AACAI,MAAAA,KAAK,CAAC,mCAAD,EACH;AACEC,QAAAA,OAAO,EAAE;AACP,oBAAU,kBADH;AAEP,0BAAgB;AAFT,SADX;AAKEC,QAAAA,MAAM,EAAE,MALV;AAMEC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAetB,QAAf;AANR,OADG,CAAL,CASGuB,IATH,CASQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EATpB,EAUGF,IAVH,CAUQC,QAAQ,IAAI,KAAKf,cAAL,CAAoBe,QAApB,CAVpB;AAYD,KAxJkB;;AAAA,SA2JnBE,YA3JmB,GA2JHtB,KAAD,IAAW;AACxBA,MAAAA,KAAK,CAACuB,cAAN;AACA,UAAI/B,WAAW,GAAG,KAAKC,KAAL,CAAWD,WAA7B;AACAkB,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;;AACA,UAAInB,WAAW,IAAK,CAApB,EAAsB;AACpB,aAAKoB,kBAAL;AACD,OAFD,MAEK;AACH,aAAKY,KAAL;AACD;AAEF,KArKkB;;AAAA,SAwKrBC,cAxKqB,GAwKHnC,CAAD,IAAO;AACtB,UAAIE,WAAW,GAAG,KAAKC,KAAL,CAAWD,WAA7B;;AACA,UAAIF,CAAC,CAACoC,GAAF,KAAU,OAAd,EAAuB;AACrB,YAAIlC,WAAW,IAAK,CAApB,EAAsB;AACpB,eAAKoB,kBAAL;AACD,SAFD,MAEK;AACH,eAAKY,KAAL;AACD;AAEF;AACF,KAlLoB;;AAAA,SAqLnBA,KArLmB,GAqLX,MAAM;AACZ,UAAIhC,WAAW,GAAG,KAAKC,KAAL,CAAWD,WAA7B;AACAA,MAAAA,WAAW,GAAGA,WAAW,IAAI,CAAf,GAAkB,CAAlB,GAAqBA,WAAW,GAAG,CAAjD;AACA,WAAKY,QAAL,CAAc;AACZZ,QAAAA,WAAW,EAAEA;AADD,OAAd;AAID,KA5LkB;;AAAA,SA8LnBmC,KA9LmB,GA8LX,MAAM;AACZ,UAAInC,WAAW,GAAG,KAAKC,KAAL,CAAWD,WAA7B;AACAA,MAAAA,WAAW,GAAGA,WAAW,IAAI,CAAf,GAAkB,CAAlB,GAAqBA,WAAW,GAAG,CAAjD;AACA,WAAKY,QAAL,CAAc;AACZZ,QAAAA,WAAW,EAAEA;AADD,OAAd;AAGD,KApMkB;;AAEjB,SAAKC,KAAL,GAAa;AACXgB,MAAAA,SAAS,EAAE,KADA;AAEXjB,MAAAA,WAAW,EAAE,CAFF;AAGXI,MAAAA,QAAQ,EAAC;AACTO,QAAAA,IAAI,EAAG,UADE;AAETyB,QAAAA,QAAQ,EAAE,GAFD;AAGTC,QAAAA,OAAO,EAAE,GAHA;AAITC,QAAAA,IAAI,EAAE,GAJG;AAKTC,QAAAA,KAAK,EAAE,GALE;AAMTlC,QAAAA,SAAS,EAAG,EANH;AAOTC,QAAAA,IAAI,EAAG;AAPE,OAHE;AAYXU,MAAAA,MAAM,EAAE;AAACwB,QAAAA,IAAI,EAAG,EAAR;AAAcC,QAAAA,OAAO,EAAG;AAAxB;AAZG,KAAb;AAgBD,GAxBsC,CA6BvC;;;AAgDF;AAGAC,EAAAA,WAAW,GAAG;AACZ,QAAIC,KAAK,GAAG,KAAK1C,KAAL,CAAWe,MAAX,CAAkByB,OAAlB,CAA0BG,KAA1B,CAAgC,CAAhC,EAAkC,CAAlC,CAAZ;AACA1B,IAAAA,OAAO,CAACC,GAAR,CAAYwB,KAAZ;AACA,QAAIE,KAAK,GAAG,KAAK5C,KAAL,CAAWe,MAAX,CAAkByB,OAAlB,CAA0BG,KAA1B,CAAgC,CAAhC,EAAkC,CAAlC,CAAZ;AACA,wBACE;AAAK,MAAA,SAAS,EAAG,SAAjB;AAAA,8BACA;AAAA,qCAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAT;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAEA,QAAC,GAAD;AAAA,gCACA;AAAA;AAAA;AAAA;AAAA,gBADA,eAEA,QAAC,QAAD;AAAA,oBACKD,KAAK,CAACG,GAAN,CAAU,CAACrC,KAAD,EAAQsC,KAAR,KAAkB;AAC3B,gCACE,QAAC,IAAD;AAAM,cAAA,EAAE,EAAC,WAAT;AAAmC,cAAA,IAAI,EAAC,MAAxC;AAAA,sCACE,QAAC,IAAD,CAAM,MAAN;AAAA,sCAAqBA,KAAK,GAAC,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEA,QAAC,IAAD,CAAM,IAAN;AAAA,uCAEE,QAAC,IAAD,CAAM,IAAN;AAAA,0CACA,QAAC,IAAD,CAAM,KAAN;AAAA,8BAAatC,KAAK,CAAC,MAAD;AAAlB;AAAA;AAAA;AAAA;AAAA,0BADA,eAEA;AAAA,6CAAcA,KAAK,CAAC,UAAD,CAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFA,eAGE;AAAA,4CAAaA,KAAK,CAAC,SAAD,CAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,0BAHF,eAIE;AAAA,yCAAUA,KAAK,CAAC,KAAD,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA,0BAJF,eAKE;AAAA,kDAAmBA,KAAK,CAAC,cAAD,CAAxB;AAAA;AAAA;AAAA;AAAA;AAAA,0BALF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,sBAFA;AAAA,eAA2BsC,KAA3B;AAAA;AAAA;AAAA;AAAA,oBADF;AAiBD,WAlBA;AADL;AAAA;AAAA;AAAA;AAAA,gBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFA,eA0BJ;AAAA;AAAA;AAAA;AAAA,cA1BI,eA2BJ,QAAC,GAAD;AAAA,+BACA,QAAC,QAAD;AAAA,oBACSF,KAAK,CAACC,GAAN,CAAU,CAACrC,KAAD,EAAQsC,KAAR,KAAkB;AAC3B,gCACE,QAAC,IAAD;AAAM,cAAA,EAAE,EAAC,WAAT;AAAmC,cAAA,IAAI,EAAC,OAAxC;AAAA,sCACE,QAAC,IAAD,CAAM,MAAN;AAAA,sCAAqBA,KAAK,GAAC,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEA,QAAC,IAAD,CAAM,IAAN;AAAA,uCAEE,QAAC,IAAD,CAAM,IAAN;AAAA,0CACA,QAAC,IAAD,CAAM,KAAN;AAAA,8BAAatC,KAAK,CAAC,MAAD;AAAlB;AAAA;AAAA;AAAA;AAAA,0BADA,eAEA;AAAA,6CAAcA,KAAK,CAAC,UAAD,CAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFA,eAGE;AAAA,4CAAaA,KAAK,CAAC,SAAD,CAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,0BAHF,eAIE;AAAA,yCAAUA,KAAK,CAAC,KAAD,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA,0BAJF,eAKE;AAAA,kDAAmBA,KAAK,CAAC,cAAD,CAAxB;AAAA;AAAA;AAAA;AAAA;AAAA,0BALF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,sBAFA;AAAA,eAA2BsC,KAA3B;AAAA;AAAA;AAAA;AAAA,oBADF;AAiBD,WAlBA;AADT;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,cA3BI;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAsDD;;AAkED;AACA;AACA;AACAC,EAAAA,cAAc,GAAG;AACf,QAAIhD,WAAW,GAAG,KAAKC,KAAL,CAAWD,WAA7B;;AACA,QAAGA,WAAW,KAAI,CAAlB,EAAoB;AAClB,0BACE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,sBAAhB;AACC,QAAA,OAAO,EAAE,KAAKmC,KADf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAMD;;AACD,WAAO,IAAP;AACD;;AAEDc,EAAAA,UAAU,GAAE;AACV,QAAIjD,WAAW,GAAG,KAAKC,KAAL,CAAWD,WAA7B;;AACA,QAAGA,WAAW,GAAG,CAAjB,EAAmB;AACjB,0BAEE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,qBAAhB;AACC,QAAA,OAAO,EAAE,KAAKgC,KADf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAQD,KATD,MASM,IAAGhC,WAAW,GAAG,CAAjB,EAAmB;AACxB,0BACC,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,qBAAhB;AACE,QAAA,OAAO,EAAE,CAAC,KAAKC,KAAL,CAAWgB,SAAZ,GAAyB,KAAKG,kBAA9B,GAAkD,IAD7D;AAEG,QAAA,QAAQ,EAAE,KAAKnB,KAAL,CAAWgB,SAFxB;AAAA,kBAGA,KAAKhB,KAAL,CAAWgB,SAAX,GAAuB,UAAvB,GAAoC;AAHpC;AAAA;AAAA;AAAA;AAAA,cADD;AAQC;;AAAA;AAEH;;AAIDiC,EAAAA,MAAM,GAAG;AAEP,wBACI,QAAC,KAAD,CAAO,QAAP;AAAA,6BAEA,QAAC,SAAD;AAAA,gCACE;AAAA,iCACE;AAAI,YAAA,SAAS,EAAE,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAIA;AAAK,UAAA,SAAS,EAAG,SAAjB;AAAA,iCACA,QAAC,IAAD;AAAM,YAAA,QAAQ,EAAE,KAAKpB,YAArB;AAAqC,YAAA,SAAS,EAAE,KAAKG,cAArD;AAAA,oCAKE,QAAC,KAAD;AACE,cAAA,WAAW,EAAE,KAAKhC,KAAL,CAAWD,WAD1B;AAEE,cAAA,YAAY,EAAE,KAAKO,YAFrB;AAGE,cAAA,KAAK,EAAE,KAAKN,KAAL,CAAWG,QAAX,CAAoB+C;AAH7B;AAAA;AAAA;AAAA;AAAA,oBALF,eAUE,QAAC,KAAD;AACE,cAAA,QAAQ,EAAI,KAAKlD,KAAL,CAAWG,QADzB;AAEE,cAAA,WAAW,EAAE,KAAKH,KAAL,CAAWD,WAF1B;AAGE,cAAA,YAAY,EAAE,KAAKO;AAHrB;AAAA;AAAA;AAAA;AAAA,oBAVF,eAgBE,QAAC,KAAD;AACE,cAAA,WAAW,EAAE,KAAKN,KAAL,CAAWD,WAD1B;AAEE,cAAA,YAAY,EAAE,KAAKO,YAFrB;AAGE,cAAA,QAAQ,EAAE,KAAKN,KAAL,CAAWG,QAAX,CAAoBgC,QAHhC;AAIE,cAAA,OAAO,EAAE,KAAKnC,KAAL,CAAWG,QAAX,CAAoBiC,OAJ/B;AAKE,cAAA,IAAI,EAAE,KAAKpC,KAAL,CAAWG,QAAX,CAAoBkC,IAL5B;AAME,cAAA,KAAK,EAAE,KAAKrC,KAAL,CAAWG,QAAX,CAAoBmC;AAN7B;AAAA;AAAA;AAAA;AAAA,oBAhBF,eAyBE,QAAC,KAAD;AACE,cAAA,WAAW,EAAE,KAAKtC,KAAL,CAAWD,WAD1B;AAEE,cAAA,YAAY,EAAE,KAAKH,UAFrB;AAGE,cAAA,SAAS,EAAE,KAAKI,KAAL,CAAWG,QAAX,CAAoBC;AAHjC;AAAA;AAAA;AAAA;AAAA,oBAzBF,eAgCG,QAAC,KAAD;AACC,cAAA,WAAW,EAAE,KAAKJ,KAAL,CAAWD,WADzB;AAEC,cAAA,YAAY,EAAE,KAAKH,UAFpB;AAGC,cAAA,SAAS,EAAE,KAAKI,KAAL,CAAWG,QAAX,CAAoBE;AAHhC;AAAA;AAAA;AAAA;AAAA,oBAhCH,EAsCI,KAAK2C,UAAL,EAtCJ,EAuCG,KAAKD,cAAL,EAvCH;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,gBAJA,EAuDF,KAAK/C,KAAL,CAAWe,MAAX,CAAkB,SAAlB,EAA6BoC,MAA7B,IAAuC,CAAvC,GAA2C,IAA3C,GAAkD,KAAKV,WAAL,EAvDhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA,YADJ;AAiEC;;AAzTsC;;AA4TzC,SAASW,KAAT,CAAe3D,KAAf,EAAsB;AACpB,MAAIA,KAAK,CAACM,WAAN,KAAsB,CAA1B,EAA6B;AAC3B,WAAO,IAAP;AACD;;AAED,sBAEE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,4BACI;AAAO,MAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAYQ,QAAC,IAAD,CAAM,OAAN;AACM,MAAA,IAAI,EAAC,MADX;AAEM,MAAA,WAAW,EAAC,YAFlB;AAGM,MAAA,IAAI,EAAC,OAHX;AAIM,MAAA,KAAK,EAAEN,KAAK,CAACyD,KAJnB;AAKM,MAAA,YAAY,EAAG,gBALrB;AAMM,MAAA,QAAQ,EAAEzD,KAAK,CAACa;AANtB;AAAA;AAAA;AAAA;AAAA,YAZR;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF;AAwBD;;KA7BQ8C,K;;AAgCT,SAASC,KAAT,CAAeC,IAAf,EAAqB;AACnB,QAAMnD,QAAQ,GAAGmD,IAAI,CAACnD,QAAtB;;AACA,MAAImD,IAAI,CAACvD,WAAL,KAAqB,CAAzB,EAA4B;AAC1B,WAAO,IAAP;AACD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,sBACKuD,IAAI,CAACnD,QAAL,CAAc+C,KADnB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;MAbQG,K;;AAgBT,SAASE,KAAT,CAAe9D,KAAf,EAAsB;AACpB,MAAIA,KAAK,CAACM,WAAN,KAAsB,CAA1B,EAA6B;AAC3B,WAAO,IAAP;AACD;;AACD,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,2BAcA,QAAC,IAAD;AAAA,8BACE,QAAC,IAAD,CAAM,GAAN;AAAA,gCAEI,QAAC,IAAD,CAAM,KAAN;AAAY,UAAA,EAAE,EAAErB,GAAhB;AAAsB,UAAA,SAAS,EAAC,kBAAhC;AAAA,kCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,IAAD,CAAM,OAAN;AACc,YAAA,IAAI,EAAC,OADnB;AAEc,YAAA,WAAW,EAAC,gBAF1B;AAGc,YAAA,IAAI,EAAC,UAHnB;AAIc,YAAA,KAAK,EAAEe,KAAK,CAAC0C,QAJ3B;AAKc,YAAA,YAAY,EAAG,GAL7B;AAMc,YAAA,QAAQ,EAAE1C,KAAK,CAACa;AAN9B;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAaI,QAAC,IAAD,CAAM,KAAN;AAAY,UAAA,EAAE,EAAE5B,GAAhB;AAAsB,UAAA,SAAS,EAAC,kBAAhC;AAAA,kCACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AACc,YAAA,IAAI,EAAC,OADnB;AAEc,YAAA,WAAW,EAAC,eAF1B;AAGc,YAAA,IAAI,EAAC,SAHnB;AAIc,YAAA,KAAK,EAAEe,KAAK,CAAC2C,OAJ3B;AAKc,YAAA,YAAY,EAAG,GAL7B;AAMc,YAAA,QAAQ,EAAE3C,KAAK,CAACa;AAN9B;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eA0BE,QAAC,IAAD,CAAM,GAAN;AAAA,gCACI,QAAC,IAAD,CAAM,KAAN;AAAY,UAAA,EAAE,EAAE5B,GAAhB;AAAsB,UAAA,SAAS,EAAC,kBAAhC;AAAA,kCACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AACc,YAAA,IAAI,EAAC,OADnB;AAEc,YAAA,WAAW,EAAC,YAF1B;AAGc,YAAA,IAAI,EAAC,MAHnB;AAIc,YAAA,KAAK,EAAEe,KAAK,CAAC4C,IAJ3B;AAKc,YAAA,YAAY,EAAG,GAL7B;AAMc,YAAA,QAAQ,EAAE5C,KAAK,CAACa;AAN9B;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAYI,QAAC,IAAD,CAAM,KAAN;AAAY,UAAA,EAAE,EAAE5B,GAAhB;AAAsB,UAAA,SAAS,EAAC,kBAAhC;AAAA,kCACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AACc,YAAA,IAAI,EAAC,OADnB;AAEc,YAAA,WAAW,EAAC,aAF1B;AAGc,YAAA,IAAI,EAAC,OAHnB;AAIc,YAAA,KAAK,EAAEe,KAAK,CAAC6C,KAJ3B;AAKc,YAAA,YAAY,EAAG,GAL7B;AAMc,YAAA,QAAQ,EAAE7C,KAAK,CAACa;AAN9B;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,cA1BF;AAAA;AAAA;AAAA;AAAA;AAAA;AAdA;AAAA;AAAA;AAAA;AAAA,UADF;AAsED;;MA1EQiD,K;AA0ER;;AAID,SAASC,KAAT,CAAeF,IAAf,EAAqB;AACnB,QAAMnD,QAAQ,GAAGmD,IAAI,CAACnD,QAAtB;;AACA,MAAImD,IAAI,CAACvD,WAAL,KAAqB,CAAzB,EAA4B;AAC1B,WAAO,IAAP;AACD;;AAED,QAAM0D,OAAO,GAAG,CACd;AAAEjD,IAAAA,KAAK,EAAE,QAAT;AAAmBkD,IAAAA,KAAK,EAAE;AAA1B,GADc,EAEd;AAAElD,IAAAA,KAAK,EAAE,aAAT;AAAwBkD,IAAAA,KAAK,EAAE;AAA/B,GAFc,EAGd;AAAElD,IAAAA,KAAK,EAAE,KAAT;AAAgBkD,IAAAA,KAAK,EAAE;AAAvB,GAHc,EAId;AAAElD,IAAAA,KAAK,EAAE,MAAT;AAAiBkD,IAAAA,KAAK,EAAE;AAAxB,GAJc,EAKd;AAAElD,IAAAA,KAAK,EAAE,QAAT;AAAmBkD,IAAAA,KAAK,EAAE;AAA1B,GALc,EAMd;AAAElD,IAAAA,KAAK,EAAE,MAAT;AAAiBkD,IAAAA,KAAK,EAAE;AAAxB,GANc,EAOd;AAAElD,IAAAA,KAAK,EAAE,SAAT;AAAoBkD,IAAAA,KAAK,EAAE;AAA3B,GAPc,EAQd;AAAElD,IAAAA,KAAK,EAAE,MAAT;AAAiBkD,IAAAA,KAAK,EAAE;AAAxB,GARc,EASd;AAAElD,IAAAA,KAAK,EAAE,SAAT;AAAoBkD,IAAAA,KAAK,EAAE;AAA3B,GATc,EAUd;AAAElD,IAAAA,KAAK,EAAE,QAAT;AAAmBkD,IAAAA,KAAK,EAAE;AAA1B,GAVc,EAWd;AAAElD,IAAAA,KAAK,EAAE,MAAT;AAAiBkD,IAAAA,KAAK,EAAE;AAAxB,GAXc,EAYd;AAAElD,IAAAA,KAAK,EAAE,WAAT;AAAsBkD,IAAAA,KAAK,EAAE;AAA7B,GAZc,CAAhB;AAeA,QAAMC,kBAAkB,GAAGrE,YAAY,EAAvC;AAEA,sBAEE;AAAA,4BACI,QAAC,MAAD;AACA,MAAA,iBAAiB,EAAE,KADnB;AAEA,MAAA,UAAU,EAAEqE,kBAFZ;AAGA,MAAA,YAAY,EAAE,CAACF,OAAO,CAAC,CAAD,CAAR,CAHd;AAIA,MAAA,OAAO,MAJP;AAKA,MAAA,OAAO,EAAEA,OALT;AAMA,MAAA,IAAI,EAAG,WANP;AAOA,MAAA,QAAQ,EAAIH,IAAI,CAAChD,YAPjB;AAQA,MAAA,MAAM,EAAIgD,IAAI,CAAClD;AARf;AAAA;AAAA;AAAA;AAAA,YADJ,eAYJ;AAAA;AAAA;AAAA;AAAA,YAZI;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF;AAkBD;;MAzCQoD,K;;AA8CT,SAASI,KAAT,CAAeN,IAAf,EAAqB;AACnB,QAAMnD,QAAQ,GAAGmD,IAAI,CAACnD,QAAtB;;AACA,MAAImD,IAAI,CAACvD,WAAL,KAAqB,CAAzB,EAA4B;AAC1B,WAAO,IAAP;AACD;;AAED,QAAM0D,OAAO,GAAG,CACd;AAAEjD,IAAAA,KAAK,EAAE,OAAT;AAAkBkD,IAAAA,KAAK,EAAE;AAAzB,GADc,EAEd;AAAElD,IAAAA,KAAK,EAAE,OAAT;AAAkBkD,IAAAA,KAAK,EAAE;AAAzB,GAFc,EAGd;AAAElD,IAAAA,KAAK,EAAE,OAAT;AAAkBkD,IAAAA,KAAK,EAAE;AAAzB,GAHc,EAId;AAAElD,IAAAA,KAAK,EAAE,QAAT;AAAmBkD,IAAAA,KAAK,EAAE;AAA1B,GAJc,EAKd;AAAElD,IAAAA,KAAK,EAAE,UAAT;AAAqBkD,IAAAA,KAAK,EAAE;AAA5B,GALc,EAMd;AAAElD,IAAAA,KAAK,EAAE,QAAT;AAAmBkD,IAAAA,KAAK,EAAE;AAA1B,GANc,EAOd;AAAElD,IAAAA,KAAK,EAAE,OAAT;AAAkBkD,IAAAA,KAAK,EAAE;AAAzB,GAPc,EAQd;AAAElD,IAAAA,KAAK,EAAE,aAAT;AAAwBkD,IAAAA,KAAK,EAAE;AAA/B,GARc,CAAhB,CANmB,CAmBnB;AACA;AACA;AACA;;AAEA,QAAMC,kBAAkB,GAAGrE,YAAY,EAAvC;AACA,sBAEE;AAAA,4BACI,QAAC,MAAD;AACA,MAAA,iBAAiB,EAAE,KADnB;AAEA,MAAA,UAAU,EAAEqE,kBAFZ;AAGA,MAAA,YAAY,EAAE,CAACF,OAAO,CAAC,CAAD,CAAR,CAHd;AAIA,MAAA,OAAO,MAJP;AAKA,MAAA,OAAO,EAAEA,OALT;AAMA,MAAA,IAAI,EAAG,WANP;AAOA,MAAA,QAAQ,EAAIH,IAAI,CAAChD,YAPjB;AAQA,MAAA,MAAM,EAAIgD,IAAI,CAACjD;AARf;AAAA;AAAA;AAAA;AAAA,YADJ,eAYJ;AAAA;AAAA;AAAA;AAAA,YAZI;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF;AAkBD;;MA3CQuD,K;AA+CT,eAAerE,UAAf,C,CAEA","sourcesContent":["import React, { Component , useState } from 'react';\nimport './App.css';\nimport Form from 'react-bootstrap/Form';\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport ToggleButtonGroup from 'react-bootstrap/ToggleButtonGroup';\nimport Card from 'react-bootstrap/Card';\nimport CardGroup from 'react-bootstrap/CardGroup';\nimport CardDeck from 'react-bootstrap/CardDeck';\nimport ToggleButton from 'react-bootstrap/ToggleButton';\nimport { ControlLabel } from 'react-bootstrap';\nimport Select from 'react-select';\nimport makeAnimated from 'react-select/animated';\n\nclass MasterForm extends React.Component {\n\n  componentDidMount() {\n    this.props.hideLoader();\n  }\n  \n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: false,\n      currentStep: 1,\n      formData:{\n      name:  'Himanshu',\n      calories: '1',\n      protein: '1', \n      fats: '1', \n      carbs: '1',\n      allergens : [],\n      tags : []\n      },\n      result: {cost : ''  , recipes : [\n      ]}\n       };\n\n  }\n\n\n\n\n  // handle the lsit input \n\n  handlelist = (e) => {\n    var emp_list ;\n   emp_list = []\n   let currentStep = this.state.currentStep;\n    var a;\n    for(a in e) {\n      emp_list.push(e[a]['value']);\n    }\n    if (currentStep  == 4){\n      this.state.formData.allergens  = emp_list\n    }else if(currentStep  == 5){\n      this.state.formData.tags  = emp_list\n    }\n    \n  }\n\n  handleChange = (event) => {\n    const value = event.target.value;\n    const name = event.target.name;\n    let target = event.target;\n    var formData = this.state.formData;\n    formData[name] = value;\n    this.setState({\n      formData\n    });\n  }\n\nhandleResponse = (r) =>{\n  \n  var res;\n  res = r.result[0]\n// turn recipes into list of lists \n  var result = this.state.result;\n  result['cost'] = res['Total cost'] ; \n  result['recipes'] = res['recipes'] ; \n  this.setState({\n      result,\n    isLoading: false\n  });\n  console.log(this.state.result['recipes'])\n\n  \n}\n\n\n\n//show resutls\n\n\nshowResults() {\n  let list1 = this.state.result.recipes.slice(0,3);\n  console.log(list1)\n  let list2 = this.state.result.recipes.slice(3,7);\n  return (\n    <div className = \"content\">\n    <center> <h2>View Recipes Here</h2> </center>  \n    <Row>\n    <br></br>\n    <CardDeck>\n        {list1.map((value, index) => {\n          return( \n            <Card bg=\"lecondary\"  key={index}  text='dark'>\n              <Card.Header>Recipe {index+1}</Card.Header>\n            <Card.Body>\n              \n              <Card.Text>\n              <Card.Title>{value['Name']}</Card.Title>\n              <p>Calories: {value['calories']}</p>\n                <p>Protein: {value['Protein']}</p>\n                <p>Fats: {value['fat']}</p>\n                <p>Carbohydrates: {value['Carbohydrate']}</p>\n\n\n              </Card.Text>\n            </Card.Body>\n          </Card>\n          )\n        })}\n  </CardDeck>\n</Row>\n<br></br>\n<Row>\n<CardDeck>\n        {list2.map((value, index) => {\n          return( \n            <Card bg=\"secondary\"  key={index}  text='white'>\n              <Card.Header>Recipe {index+1}</Card.Header>\n            <Card.Body>\n              \n              <Card.Text>\n              <Card.Title>{value['Name']}</Card.Title>\n              <p>Calories: {value['calories']}</p>\n                <p>Protein: {value['Protein']}</p>\n                <p>Fats: {value['fat']}</p>\n                <p>Carbohydrates: {value['Carbohydrate']}</p>\n\n\n              </Card.Text>\n            </Card.Body>\n          </Card>\n          )\n        })}\n  </CardDeck>\n    </Row>\n    </div>\n\n    )\n}\n\n\n\nhandlePredictClick = () => {\n    const formData = this.state.formData;\n    console.log(formData);\n    this.setState({isLoading: true });\n    fetch('http://127.0.0.1:5000/prediction/', \n      {\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        method: 'POST',\n        body: JSON.stringify(formData)\n      })\n      .then(response => response.json())\n      .then(response => this.handleResponse(response));\n      \n  }\n\n  // Trigger an alert on form submission\n  handleSubmit = (event) => {\n    event.preventDefault()\n    let currentStep = this.state.currentStep\n    console.log('pressed enttered')\n    if (currentStep  == 5){\n      this.handlePredictClick()\n    }else{\n      this._next()\n    }\n    \n  }\n\n  //do this when enter is pressed \n_handleKeyDown = (e) => {\n  let currentStep = this.state.currentStep\n  if (e.key === 'Enter') {\n    if (currentStep  == 5){\n      this.handlePredictClick()\n    }else{\n      this._next()\n    }\n    \n  }\n}\n\n\n  _next = () => {\n    let currentStep = this.state.currentStep\n    currentStep = currentStep >= 4? 5: currentStep + 1\n    this.setState({\n      currentStep: currentStep\n    });\n\n  }\n    \n  _prev = () => {\n    let currentStep = this.state.currentStep\n    currentStep = currentStep <= 1? 1: currentStep - 1\n    this.setState({\n      currentStep: currentStep\n    })\n  }\n\n/*\n* the functions for our button\n*/\npreviousButton() {\n  let currentStep = this.state.currentStep;\n  if(currentStep !==1){\n    return (\n      <Button variant=\"secondary float-left\"\n       onClick={this._prev} >\n      Previous\n      </Button>\n    )\n  } \n  return null;\n}\n\nnextButton(){\n  let currentStep = this.state.currentStep;\n  if(currentStep < 5){\n    return (\n\n      <Button variant=\"primary float-right\"\n       onClick={this._next} >\n      Next\n      </Button>  \n\n    )\n  }else if(currentStep = 5){\n   return (\n    <Button variant=\"primary float-right\"\n      onClick={!this.state.isLoading ?  this.handlePredictClick: null } \n       disabled={this.state.isLoading} >\n   {this.state.isLoading ? 'Loading…' : 'Submit '}\n   </Button> \n\n   )\n   };\n \n}\n\n\n\nrender() {\n  \n  return (\n      <React.Fragment>\n\n      <Container>\n        <div>\n          <h1 className ='title'>Food Details</h1>\n        </div>\n      <div className = \"content\">\n      <Form onSubmit={this.handleSubmit}   onKeyDown={this._handleKeyDown}>\n\n      {/* \n        render the form steps and pass required props in\n      */}\n        <Step1 \n          currentStep={this.state.currentStep} \n          handleChange={this.handleChange}\n          email={this.state.formData.email}\n        />\n        <Step2 \n          formData = {this.state.formData}\n          currentStep={this.state.currentStep} \n          handleChange={this.handleChange}\n          \n        />\n        <Step3 \n          currentStep={this.state.currentStep} \n          handleChange={this.handleChange}\n          calories={this.state.formData.calories}\n          protein={this.state.formData.protein}\n          fats={this.state.formData.fats}\n          carbs={this.state.formData.carbs}\n        />\n\n        <Step4 \n          currentStep={this.state.currentStep} \n          handleChange={this.handlelist}\n          allergens={this.state.formData.allergens}\n        />    \n\n\n         <Step5\n          currentStep={this.state.currentStep} \n          handleChange={this.handlelist}\n          allergens={this.state.formData.tags}\n        />    \n    \n         {this.nextButton()}\n        {this.previousButton()}\n      </Form>\n\n\n  \n\n      \n      </div>\n    \n  \n      {/* display result */}\n   {this.state.result['recipes'].length == 0 ? null : this.showResults() }\n\n\n      </Container>\n\n      </React.Fragment>\n    );\n  }\n}\n\nfunction Step1(props) {\n  if (props.currentStep !== 1) {\n    return null\n  } \n  \n  return(\n   \n    <div className=\"form-group\">\n        <label htmlFor=\"email\">Name</label>\n        {/* <input\n          className=\"form-control\"\n          id=\"email\"\n          name=\"email\"\n          type=\"text\"\n          placeholder=\"Enter Name\"\n          value={props.name}\n          onChange={props.handleChange}\n          \n          /> */}\n            <Form.Control \n                  type=\"text\" \n                  placeholder=\"Enter Name\" \n                  name=\"email\"\n                  value={props.email}\n                  defaultValue = 'Himanshu Singh'\n                  onChange={props.handleChange} />\n   </div>\n    \n  );\n}\n\n\nfunction Step2(args) {\n  const formData = args.formData;\n  if (args.currentStep !== 2) {\n    return null\n  }\n  \n  return(\n    <div className=\"form-group\">\n     Hi {args.formData.email} lets get you less fat\n    </div>\n   \n  );\n\n}\n\n\nfunction Step3(props) {\n  if (props.currentStep !== 3) {\n    return null\n  } \n  return(\n    <React.Fragment>\n    {/* <div className=\"form-group\">\n      <label htmlFor=\"password\">Password</label>\n      <input\n        className=\"form-control\"\n        id=\"password\"\n        name=\"password\"\n        type=\"password\"\n        placeholder=\"Enter password\"\n        value={props.password}\n        onChange={props.handleChange}\n        />      \n    </div> */}\n\n    <Form>\n      <Form.Row>\n\n          <Form.Group as={Col}  controlId=\"formGridAddress1\">\n            <Form.Label>Calories</Form.Label>\n            <Form.Control \n                          type=\"float\" \n                          placeholder=\"Enter Calories\" \n                          name=\"calories\"\n                          value={props.calories}\n                          defaultValue = '1'\n                          onChange={props.handleChange} />\n          </Form.Group>\n\n          <Form.Group as={Col}  controlId=\"formGridAddress2\">\n              <Form.Label>Protein</Form.Label>\n              <Form.Control \n                            type=\"float\" \n                            placeholder=\"Enter Protein\" \n                            name=\"protein\"\n                            value={props.protein}\n                            defaultValue = '1'\n                            onChange={props.handleChange} />\n          </Form.Group>\n      </Form.Row>\n\n      <Form.Row>\n          <Form.Group as={Col}  controlId=\"formGridAddress4\">\n              <Form.Label>Fats</Form.Label>\n              <Form.Control \n                            type=\"float\" \n                            placeholder=\"Enter Fats\" \n                            name=\"fats\"\n                            value={props.fats}\n                            defaultValue = '1'\n                            onChange={props.handleChange} />\n          </Form.Group>\n\n          <Form.Group as={Col}  controlId=\"formGridAddress4\">\n              <Form.Label>Carbs</Form.Label>\n              <Form.Control \n                            type=\"float\" \n                            placeholder=\"Enter Carbs\" \n                            name=\"carbs\"\n                            value={props.carbs}\n                            defaultValue = '1'\n                            onChange={props.handleChange} />\n          </Form.Group>\n\n      </Form.Row>\n\n    </Form>\n      \n    </React.Fragment>\n  );\n};\n\n\n\nfunction Step4(args) {\n  const formData = args.formData;\n  if (args.currentStep !== 4) {\n    return null\n  }\n\n  const options = [\n    { value: 'Celery', label: 'Celery' },\n    { value: 'Crustaceans', label: 'Crustaceans' },\n    { value: 'Egg', label: 'Egg' },\n    { value: 'Fish', label: 'Fish' },\n    { value: 'Gluten', label: 'Gluten' },\n    { value: 'Milk', label: 'Milk' },\n    { value: 'Mustard', label: 'Mustard' },\n    { value: 'Nuts', label: 'Nuts' },\n    { value: 'Peanuts', label: 'Peanuts' },\n    { value: 'Sesame', label: 'Sesame' },\n    { value: 'Soya', label: 'Soya' },\n    { value: 'Sulphites', label: 'Sulphites' }\n  ]\n  \n  const animatedComponents = makeAnimated();\n\n  return(\n\n    <div>\n        <Select\n        closeMenuOnSelect={false}\n        components={animatedComponents}\n        defaultValue={[options[4]]}\n        isMulti\n        options={options}\n        name = \"allergens\"\n        onChange = {args.handleChange}\n        values = {args.allergens}\n      />\n\n<br/>\n\n</div>\n);\n}\n\n\n\n\nfunction Step5(args) {\n  const formData = args.formData;\n  if (args.currentStep !== 5) {\n    return null\n  }\n\n  const options = [\n    { value: 'Spicy', label: 'Spicy' },\n    { value: 'Vegan', label: 'Vegan' },\n    { value: 'Quick', label: 'Quick' },\n    { value: 'Veggie', label: 'Veggie' },\n    { value: 'Low Salt', label: 'Low Salt' },\n    { value: 'Summer', label: 'Summer' },\n    { value: 'Quick', label: 'Quick' },\n    { value: 'Plant-based', label: 'Plant-based' },\n  \n  ]\n  \n\n  // {'Low Sat Fat', 'High Fiber', 'Equipment Needed', 'Quick', 'Rapid', 'Under 750 calories', 'Chicken', 'Dairy Free', 'Lactose Free', 'Vegan', 'Family Friendly', 'Extra spicy', 'Calorie Smart', 'Balanced', \n  // 'Family Box', 'Healthy', 'Pork', 'Veggie', 'Beef', 'Not Suitable for Coeliacs', 'Exploration', 'One Pot Wonder', 'Low Fat', 'Fish', \n  // 'Under 550 calories', \"Chef's Choice\", 'Low Salt', 'No Gluten Containing Ingredients', '\n  // Summer', 'Naturally Gluten-Free', 'Under 600 calories', 'Spicy', 'Plant-based', 'Eat First', 'Salad'}\n\n  const animatedComponents = makeAnimated();\n  return(\n\n    <div>\n        <Select\n        closeMenuOnSelect={false}\n        components={animatedComponents}\n        defaultValue={[options[0]]}\n        isMulti\n        options={options}\n        name = \"allergens\"\n        onChange = {args.handleChange}\n        values = {args.tags}\n      />\n\n<br/>\n\n</div>\n);\n}\n\n\n\nexport default MasterForm;\n\n//ReactDOM.render(<MasterForm />, document.getElementById('root'))\n"]},"metadata":{},"sourceType":"module"}