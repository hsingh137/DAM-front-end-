{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tecti\\\\Desktop\\\\front end\\\\test\\\\frontend\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Form from 'react-bootstrap/Form';\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Button from 'react-bootstrap/Button';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport ToggleButtonGroup from 'react-bootstrap/ToggleButtonGroup';\nimport ToggleButton from 'react-bootstrap/ToggleButton';\nimport { ControlLabel } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass MasterForm extends React.Component {\n  componentDidMount() {\n    this.props.hideLoader();\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      const value = event.target.value;\n      const name = event.target.name;\n      var formData = this.state.formData;\n      formData[name] = value;\n      this.setState({\n        formData\n      });\n    };\n\n    this.handlePredictClick = () => {\n      const formData = this.state.formData;\n      console.log(formData);\n      this.setState({\n        isLoading: true\n      });\n      fetch('http://127.0.0.1:5000/prediction/', {\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        method: 'POST',\n        body: JSON.stringify(formData)\n      }).then(response => response.json()).then(response => console.log(response)); // .then(response => {\n      //   this.setState({\n      //     result: response.result,\n      //     isLoading: false\n      //   });\n      // });\n    };\n\n    this._next = () => {\n      let currentStep = this.state.currentStep;\n      currentStep = currentStep >= 3 ? 4 : currentStep + 1;\n      this.setState({\n        currentStep: currentStep\n      });\n    };\n\n    this._prev = () => {\n      let currentStep = this.state.currentStep;\n      currentStep = currentStep <= 1 ? 1 : currentStep - 1;\n      this.setState({\n        currentStep: currentStep\n      });\n    };\n\n    this.state = {\n      isLoading: false,\n      currentStep: 1,\n      formData: {\n        name: '',\n        calories: '',\n        protein: '',\n        fats: '',\n        carbs: '',\n        allergens: []\n      }\n    };\n  }\n\n  /*\n  * the functions for our button\n  */\n  previousButton() {\n    let currentStep = this.state.currentStep;\n\n    if (currentStep !== 1) {\n      return /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"secondary float-left\",\n        onClick: this._prev,\n        children: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 7\n      }, this);\n    }\n\n    return null;\n  }\n\n  nextButton() {\n    let currentStep = this.state.currentStep;\n\n    if (currentStep < 4) {\n      return /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary float-right\",\n        onClick: this._next,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 7\n      }, this);\n    } else if (currentStep = 4) {\n      return /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary float-right\",\n        onClick: this.handlePredictClick,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 5\n      }, this);\n    }\n\n    ;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"title\",\n            children: \"Food Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content\",\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            onSubmit: this.handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(Step1, {\n              currentStep: this.state.currentStep,\n              handleChange: this.handleChange,\n              email: this.state.formData.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(Step2, {\n              formData: this.state.formData,\n              currentStep: this.state.currentStep,\n              handleChange: this.handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(Step3, {\n              currentStep: this.state.currentStep,\n              handleChange: this.handleChange,\n              calories: this.state.formData.calories,\n              protein: this.state.formData.protein,\n              fats: this.state.formData.fats,\n              carbs: this.state.formData.carbs\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(Step4, {\n              currentStep: this.state.currentStep,\n              handleChange: this.handleChange,\n              allergens: this.state.formData.allergens\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 9\n            }, this), this.nextButton(), this.previousButton()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nfunction Step1(props) {\n  if (props.currentStep !== 1) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-group\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"email\",\n      children: \"Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n      type: \"text\",\n      placeholder: \"Enter email\",\n      name: \"email\",\n      value: props.email,\n      onChange: props.handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 193,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Step1;\n\nfunction Step2(args) {\n  const formData = args.formData;\n\n  if (args.currentStep !== 2) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-group\",\n    children: [\"Hi \", args.formData.email, \" lets get you less fat\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 224,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = Step2;\n\nfunction Step3(props) {\n  if (props.currentStep !== 3) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Row, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          controlId: \"formGridAddress1\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Calories\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"float\",\n            placeholder: \"Enter Calories\",\n            name: \"calories\",\n            value: props.calories,\n            onChange: props.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          controlId: \"formGridAddress2\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Protein\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"float\",\n            placeholder: \"Enter Protein\",\n            name: \"protein\",\n            value: props.protein,\n            onChange: props.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          controlId: \"formGridAddress2\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Fats\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"float\",\n            placeholder: \"Enter Fat\",\n            name: \"fat\",\n            value: props.fats,\n            onChange: props.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          controlId: \"formGridAddress2\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Fats\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"float\",\n            placeholder: \"Enter Carbs\",\n            name: \"fat\",\n            value: props.carbs,\n            onChange: props.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 238,\n    columnNumber: 5\n  }, this);\n}\n\n_c3 = Step3;\n;\n\nfunction Step4(args) {\n  const formData = args.formData;\n\n  if (args.currentStep !== 4) {\n    return null;\n  }\n\n  var allergns1 = ['Celery', 'Crustaceans', 'Egg', 'Fish'];\n  var allergns2 = ['Gluten', 'Milk', 'Mustard', 'Nuts'];\n  var allergns3 = ['Peanuts', 'Sesame', 'Soya', 'Sulphites'];\n  return /*#__PURE__*/_jsxDEV(Row, {\n    children: [/*#__PURE__*/_jsxDEV(\"col\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToggleButtonGroup, {\n      type: \"checkbox\",\n      className: \"mb-6\",\n      children: allergns1.map(label => /*#__PURE__*/_jsxDEV(ToggleButton, {\n        value: label,\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 29\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 318,\n    columnNumber: 5\n  }, this);\n}\n\n_c4 = Step4;\nexport default MasterForm; //ReactDOM.render(<MasterForm />, document.getElementById('root'))\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Step1\");\n$RefreshReg$(_c2, \"Step2\");\n$RefreshReg$(_c3, \"Step3\");\n$RefreshReg$(_c4, \"Step4\");","map":{"version":3,"sources":["C:/Users/tecti/Desktop/front end/test/frontend/src/App.js"],"names":["React","Component","Form","Col","Container","Row","Button","ToggleButtonGroup","ToggleButton","ControlLabel","MasterForm","componentDidMount","props","hideLoader","constructor","handleChange","event","value","target","name","formData","state","setState","handlePredictClick","console","log","isLoading","fetch","headers","method","body","JSON","stringify","then","response","json","_next","currentStep","_prev","calories","protein","fats","carbs","allergens","previousButton","nextButton","render","handleSubmit","email","Step1","Step2","args","Step3","Step4","allergns1","allergns2","allergns3","map","label"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport Form from 'react-bootstrap/Form';\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Button from 'react-bootstrap/Button';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport ToggleButtonGroup from 'react-bootstrap/ToggleButtonGroup';\nimport ToggleButton from 'react-bootstrap/ToggleButton';\nimport { ControlLabel } from 'react-bootstrap';\n\n\nclass MasterForm extends React.Component {\n\n  componentDidMount() {\n    this.props.hideLoader();\n  }\n  \n \n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: false,\n      currentStep: 1,\n      formData:{\n      name:  '',\n      calories: '',\n      protein: '', \n      fats: '', \n      carbs: '',\n      allergens : []\n   \n      },\n     \n    };\n  }\n  handleChange = (event) => {\n    const value = event.target.value;\n    const name = event.target.name;\n    var formData = this.state.formData;\n    formData[name] = value;\n    this.setState({\n      formData\n    });\n  }\n\n\n  handlePredictClick = () => {\n    const formData = this.state.formData;\n    console.log(formData);\n    this.setState({isLoading: true });\n    fetch('http://127.0.0.1:5000/prediction/', \n      {\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        method: 'POST',\n        body: JSON.stringify(formData)\n      })\n      .then(response => response.json())\n      .then(response => console.log(response))\n      // .then(response => {\n      //   this.setState({\n      //     result: response.result,\n      //     isLoading: false\n      //   });\n      // });\n  }\n\n\n\n  _next = () => {\n    let currentStep = this.state.currentStep\n    currentStep = currentStep >= 3? 4: currentStep + 1\n    this.setState({\n      currentStep: currentStep\n    })\n  }\n    \n  _prev = () => {\n    let currentStep = this.state.currentStep\n    currentStep = currentStep <= 1? 1: currentStep - 1\n    this.setState({\n      currentStep: currentStep\n    })\n  }\n\n/*\n* the functions for our button\n*/\npreviousButton() {\n  let currentStep = this.state.currentStep;\n  if(currentStep !==1){\n    return (\n      <Button variant=\"secondary float-left\"\n       onClick={this._prev} >\n      Previous\n      </Button>\n    )\n  } \n  return null;\n}\n\nnextButton(){\n  let currentStep = this.state.currentStep;\n  if(currentStep < 4){\n    return (\n\n      <Button variant=\"primary float-right\"\n       onClick={this._next} >\n      Next\n      </Button>  \n\n    )\n  } else if(currentStep = 4){\n   return (\n    <Button variant=\"primary float-right\"\n    onClick={this.handlePredictClick} >\n   Submit\n   </Button> )\n   };\n\n \n}\n\nrender() {\n  \n  return (\n      <React.Fragment>\n\n      <Container>\n        <div>\n          <h1 className ='title'>Food Details</h1>\n        </div>\n      <div className = \"content\">\n        \n      <Form onSubmit={this.handleSubmit}>\n  \n      {/* \n        render the form steps and pass required props in\n      */}\n        <Step1 \n          currentStep={this.state.currentStep} \n          handleChange={this.handleChange}\n          email={this.state.formData.email}\n        />\n        <Step2 \n          formData = {this.state.formData}\n          currentStep={this.state.currentStep} \n          handleChange={this.handleChange}\n          \n        />\n        <Step3 \n          currentStep={this.state.currentStep} \n          handleChange={this.handleChange}\n          calories={this.state.formData.calories}\n          protein={this.state.formData.protein}\n          fats={this.state.formData.fats}\n          carbs={this.state.formData.carbs}\n        />\n\n        <Step4 \n          currentStep={this.state.currentStep} \n          handleChange={this.handleChange}\n          allergens={this.state.formData.allergens}\n        />        \n    \n         {this.nextButton()}\n        {this.previousButton()}\n      </Form>\n   \n    \n \n      \n      </div>\n    \n      </Container>\n\n      </React.Fragment>\n    );\n  }\n}\n\nfunction Step1(props) {\n  if (props.currentStep !== 1) {\n    return null\n  } \n  \n  return(\n   \n    <div className=\"form-group\">\n        <label htmlFor=\"email\">Name</label>\n        {/* <input\n          className=\"form-control\"\n          id=\"email\"\n          name=\"email\"\n          type=\"text\"\n          placeholder=\"Enter Name\"\n          value={props.name}\n          onChange={props.handleChange}\n          \n          /> */}\n            <Form.Control \n                  type=\"text\" \n                  placeholder=\"Enter email\" \n                  name=\"email\"\n                  value={props.email}\n                  onChange={props.handleChange} />\n   </div>\n    \n  );\n}\n\n\nfunction Step2(args) {\n  const formData = args.formData;\n  if (args.currentStep !== 2) {\n    return null\n  }\n  \n  return(\n    <div className=\"form-group\">\n     Hi {args.formData.email} lets get you less fat\n    </div>\n   \n  );\n\n}\n\n\nfunction Step3(props) {\n  if (props.currentStep !== 3) {\n    return null\n  } \n  return(\n    <React.Fragment>\n    {/* <div className=\"form-group\">\n      <label htmlFor=\"password\">Password</label>\n      <input\n        className=\"form-control\"\n        id=\"password\"\n        name=\"password\"\n        type=\"password\"\n        placeholder=\"Enter password\"\n        value={props.password}\n        onChange={props.handleChange}\n        />      \n    </div> */}\n\n    <Form>\n      <Form.Row>\n\n          <Form.Group as={Col}  controlId=\"formGridAddress1\">\n            <Form.Label>Calories</Form.Label>\n            <Form.Control \n                          type=\"float\" \n                          placeholder=\"Enter Calories\" \n                          name=\"calories\"\n                          value={props.calories}\n                          onChange={props.handleChange} />\n          </Form.Group>\n\n          <Form.Group as={Col}  controlId=\"formGridAddress2\">\n              <Form.Label>Protein</Form.Label>\n              <Form.Control \n                            type=\"float\" \n                            placeholder=\"Enter Protein\" \n                            name=\"protein\"\n                            value={props.protein}\n                            onChange={props.handleChange} />\n          </Form.Group>\n      </Form.Row>\n\n      <Form.Row>\n          <Form.Group as={Col}  controlId=\"formGridAddress2\">\n              <Form.Label>Fats</Form.Label>\n              <Form.Control \n                            type=\"float\" \n                            placeholder=\"Enter Fat\" \n                            name=\"fat\"\n                            value={props.fats}\n                            onChange={props.handleChange} />\n          </Form.Group>\n\n          <Form.Group as={Col}  controlId=\"formGridAddress2\">\n              <Form.Label>Fats</Form.Label>\n              <Form.Control \n                            type=\"float\" \n                            placeholder=\"Enter Carbs\" \n                            name=\"fat\"\n                            value={props.carbs}\n                            onChange={props.handleChange} />\n          </Form.Group>\n\n      </Form.Row>\n\n    </Form>\n      \n    </React.Fragment>\n  );\n};\n\n\n\nfunction Step4(args) {\n  const formData = args.formData;\n  if (args.currentStep !== 4) {\n    return null\n  }\n\n  var allergns1 = ['Celery','Crustaceans' ,'Egg','Fish'];\n  var allergns2 = [ 'Gluten','Milk','Mustard','Nuts',];\n  var allergns3= [ 'Peanuts','Sesame','Soya', 'Sulphites'];\n\n  return(\n    <Row>\n      <col></col>\n        <ToggleButtonGroup type=\"checkbox\" className=\"mb-6\">\n              {allergns1.map((label) => (\n                            <ToggleButton value={label}>{label}</ToggleButton>\n                            \n                          \n                        ))}\n        </ToggleButtonGroup>\n    </Row>\n\n)}\nexport default MasterForm;\n\n//ReactDOM.render(<MasterForm />, document.getElementById('root'))"]},"metadata":{},"sourceType":"module"}