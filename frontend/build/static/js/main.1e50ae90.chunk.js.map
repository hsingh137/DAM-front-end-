{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Step1","props","currentStep","className","htmlFor","id","name","type","placeholder","value","onChange","handleChange","Step2","username","Step3","Fragment","password","Button","variant","MasterForm","event","target","setState","handleSubmit","preventDefault","state","formData","console","log","fetch","headers","method","body","JSON","stringify","then","response","json","result","isLoading","_next","_prev","email","this","hideLoader","onClick","Container","Form","onSubmit","nextButton","previousButton","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","loader","document","querySelector","showLoader","classList","remove","add","setTimeout","ReactDOM","render","getElementById"],"mappings":"yRAsJA,SAASA,EAAMC,GACb,OAA0B,IAAtBA,EAAMC,YACD,KAIP,sBAAKC,UAAU,aAAf,UACI,uBAAOC,QAAQ,OAAf,kBACA,uBACED,UAAU,eACVE,GAAG,OACHC,KAAK,OACLC,KAAK,OACLC,YAAY,aACZC,MAAOR,EAAMK,KACbI,SAAUT,EAAMU,kBAO1B,SAASC,EAAMX,GACb,OAA0B,IAAtBA,EAAMC,YACD,KAKP,sBAAKC,UAAU,aAAf,UACE,uBAAOC,QAAQ,WAAf,sBACA,uBACED,UAAU,eACVE,GAAG,WACHC,KAAK,WACLC,KAAK,OACLC,YAAY,iBACZC,MAAOR,EAAMY,SACbH,SAAUT,EAAMU,kBAUxB,SAASG,EAAMb,GACb,OAA0B,IAAtBA,EAAMC,YACD,KAGP,eAAC,IAAMa,SAAP,WACA,sBAAKZ,UAAU,aAAf,UACE,uBAAOC,QAAQ,WAAf,sBACA,uBACED,UAAU,eACVE,GAAG,WACHC,KAAK,WACLC,KAAK,WACLC,YAAY,iBACZC,MAAOR,EAAMe,SACbN,SAAUT,EAAMU,kBAGpB,cAACM,EAAA,EAAD,CAAQC,QAAQ,sBAAhB,wBAOWC,M,kDA/Mb,WAAYlB,GAAQ,IAAD,8BACjB,cAAMA,IASRU,aAAe,SAAAS,GAAU,IAAD,EACAA,EAAMC,OAArBf,EADe,EACfA,KAAMG,EADS,EACTA,MACb,EAAKa,SAAL,eACGhB,EAAOG,KAbO,EAiBnBc,aAAe,SAAAH,GACbA,EAAMI,iBADgB,MAEe,EAAKC,MACpCC,GAHgB,EAEdpB,KAFc,EAERO,SAFQ,EAEEG,SACP,EAAKS,OACtBE,QAAQC,IAAIF,GACZG,MAAM,gCACJ,CACEC,QAAS,CACP,OAAU,mBACV,eAAgB,oBAElBC,OAAQ,OACRC,KAAMC,KAAKC,UAAUR,KAEtBS,MAAK,SAAAC,GAAQ,OAAIT,QAAQC,IAAIQ,MAC7BD,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAC,GACJ,EAAKd,SAAS,CACZgB,OAAQF,EAASE,OACjBC,WAAW,QApCA,EA0CnBC,MAAQ,WACN,IAAItC,EAAc,EAAKuB,MAAMvB,YAC7BA,EAAcA,GAAe,EAAG,EAAGA,EAAc,EACjD,EAAKoB,SAAS,CACZpB,YAAaA,KA9CE,EAkDnBuC,MAAQ,WACN,IAAIvC,EAAc,EAAKuB,MAAMvB,YAC7BA,EAAcA,GAAe,EAAG,EAAGA,EAAc,EACjD,EAAKoB,SAAS,CACZpB,YAAaA,KApDf,EAAKuB,MAAQ,CACXvB,YAAa,EACbwC,MAAQ,GACR7B,SAAU,GACVG,SAAU,IANK,E,qDALnB,WACE2B,KAAK1C,MAAM2C,e,4BAiEf,WAEE,OAAkB,IADAD,KAAKlB,MAAMvB,YAGzB,cAACe,EAAA,EAAD,CAAQC,QAAQ,uBACf2B,QAASF,KAAKF,MADf,sBAMG,O,wBAGT,WAEE,OADkBE,KAAKlB,MAAMvB,YACb,EAGZ,cAACe,EAAA,EAAD,CAAQC,QAAQ,sBACf2B,QAASF,KAAKH,MADf,kBAOG,O,oBAKT,WACE,OACI,cAAC,IAAMzB,SAAP,UAEA,eAAC+B,EAAA,EAAD,WACE,8BACE,oBAAI3C,UAAW,QAAf,4BAEJ,qBAAKA,UAAY,UAAjB,SACA,eAAC4C,EAAA,EAAD,CAAMC,SAAUL,KAAKpB,aAArB,UAIE,cAACvB,EAAD,CACEE,YAAayC,KAAKlB,MAAMvB,YACxBS,aAAcgC,KAAKhC,aACnBL,KAAMqC,KAAKlB,MAAMnB,OAEnB,cAACM,EAAD,CACEV,YAAayC,KAAKlB,MAAMvB,YACxBS,aAAcgC,KAAKhC,aACnBE,SAAU8B,KAAKlB,MAAMZ,WAEvB,cAACC,EAAD,CACEZ,YAAayC,KAAKlB,MAAMvB,YACxBS,aAAcgC,KAAKhC,aACnBK,SAAU2B,KAAKlB,MAAMT,WAErB2B,KAAKM,aACNN,KAAKO,+B,GA/HWC,IAAMC,WCGhBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBpB,MAAK,YAAkD,IAA/CqB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCARO,EAASC,SAASC,cAAc,WAGhCC,EAAa,kBAAMH,EAAOI,UAAUC,OAAO,iBAE3CtB,EAAa,kBAAMiB,EAAOI,UAAUE,IAAI,iBAE9CC,YAAW,kBAETC,IAASC,OACP,cAAC,EAAD,CACE1B,WAAYA,EACZoB,WAAYA,IAEdF,SAASS,eAAe,UAE1B,KAsBFlB,M","file":"static/js/main.1e50ae90.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport Form from 'react-bootstrap/Form';\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Button from 'react-bootstrap/Button';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nclass MasterForm extends React.Component {\n\n  componentDidMount() {\n    this.props.hideLoader();\n  }\n  \n \n  constructor(props) {\n    super(props)\n    this.state = {\n      currentStep: 1,\n      email:  '',\n      username: '',\n      password: '', \n    }\n  }\n\n  handleChange = event => {\n    const {name, value} = event.target\n    this.setState({\n      [name]: value\n    })    \n  }\n   \n  handleSubmit = event => {\n    event.preventDefault()\n    const { name, username, password } = this.state ; \n    const formData = this.state ;\n    console.log(formData);\n    fetch('http://127.0.0.1:5000/predict', \n      {\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json' , \n        },\n        method: 'POST',\n        body: JSON.stringify(formData)\n      })\n      .then(response => console.log(response))\n      .then(response => response.json())\n      .then(response => {\n        this.setState({\n          result: response.result,\n          isLoading: false\n        });\n      });\n   \n  }\n  \n  _next = () => {\n    let currentStep = this.state.currentStep\n    currentStep = currentStep >= 2? 3: currentStep + 1\n    this.setState({\n      currentStep: currentStep\n    })\n  }\n    \n  _prev = () => {\n    let currentStep = this.state.currentStep\n    currentStep = currentStep <= 1? 1: currentStep - 1\n    this.setState({\n      currentStep: currentStep\n    })\n  }\n\n/*\n* the functions for our button\n*/\npreviousButton() {\n  let currentStep = this.state.currentStep;\n  if(currentStep !==1){\n    return (\n      <Button variant=\"secondary float-left\"\n       onClick={this._prev} >\n      Previous\n      </Button>\n    )\n  }\n  return null;\n}\n\nnextButton(){\n  let currentStep = this.state.currentStep;\n  if(currentStep <3){\n    return (\n\n      <Button variant=\"primary float-right\"\n       onClick={this._next} >\n      Next\n      </Button>  \n\n    )\n  }\n  return null;\n}\n\n\n\nrender() {\n  return (\n      <React.Fragment>\n\n      <Container>\n        <div>\n          <h1 className ='title'>Food Details</h1>\n        </div>\n      <div className = \"content\">\n      <Form onSubmit={this.handleSubmit}>\n      {/* \n        render the form steps and pass required props in\n      */}\n        <Step1 \n          currentStep={this.state.currentStep} \n          handleChange={this.handleChange}\n          name={this.state.name}\n        />\n        <Step2 \n          currentStep={this.state.currentStep} \n          handleChange={this.handleChange}\n          username={this.state.username}\n        />\n        <Step3 \n          currentStep={this.state.currentStep} \n          handleChange={this.handleChange}\n          password={this.state.password}\n        />\n         {this.nextButton()}\n        {this.previousButton()}\n       \n\n      </Form>\n\n      </div>\n    \n      </Container>\n\n      </React.Fragment>\n    );\n  }\n}\n\nfunction Step1(props) {\n  if (props.currentStep !== 1) {\n    return null\n  } \n  return(\n   \n    <div className=\"form-group\">\n        <label htmlFor=\"name\">Name</label>\n        <input\n          className=\"form-control\"\n          id=\"name\"\n          name=\"name\"\n          type=\"text\"\n          placeholder=\"Enter Name\"\n          value={props.name}\n          onChange={props.handleChange}\n          />\n   </div>\n          \n  );\n}\n\nfunction Step2(props) {\n  if (props.currentStep !== 2) {\n    return null\n  } \n  return(\n \n    \n    <div className=\"form-group\">\n      <label htmlFor=\"username\">Username</label>\n      <input\n        className=\"form-control\"\n        id=\"username\"\n        name=\"username\"\n        type=\"text\"\n        placeholder=\"Enter username\"\n        value={props.username}\n        onChange={props.handleChange}\n        />\n    </div>\n   \n  );\n}\n\n\n\n\nfunction Step3(props) {\n  if (props.currentStep !== 3) {\n    return null\n  } \n  return(\n    <React.Fragment>\n    <div className=\"form-group\">\n      <label htmlFor=\"password\">Password</label>\n      <input\n        className=\"form-control\"\n        id=\"password\"\n        name=\"password\"\n        type=\"password\"\n        placeholder=\"Enter password\"\n        value={props.password}\n        onChange={props.handleChange}\n        />      \n    </div>\n    <Button variant=\"success float-right\">Sign up</Button>\n    </React.Fragment>\n  );\n};\n\n\n\nexport default MasterForm;\n\n//ReactDOM.render(<MasterForm />, document.getElementById('root'))","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport MasterForm from './App';\nimport reportWebVitals from './reportWebVitals';\n\n// the setTimeout simulates the time it takes react to load, and is not part of the solutio\nconst loader = document.querySelector('.loader');\n\n// if you want to show the loader when React loads data again\nconst showLoader = () => loader.classList.remove('loader--hide');\n\nconst hideLoader = () => loader.classList.add('loader--hide');\n\nsetTimeout(() => \n  // the show/hide functions are passed as props\n  ReactDOM.render(\n    <MasterForm\n      hideLoader={hideLoader}\n      showLoader={showLoader} \n      />,\n    document.getElementById('app')\n  )\n, 1000);\n\n// ReactDOM.render(\n// <React.StrictMode>\n//     <MasterForm />\n//     </React.StrictMode>,\n//    document.getElementById('root')\n//    );\n\n\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}