{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Step1","props","currentStep","className","htmlFor","id","name","type","placeholder","value","onChange","handleChange","Step2","username","Step3","Fragment","password","Button","variant","MasterForm","state","loading","event","target","setState","handleSubmit","preventDefault","alert","_next","_prev","email","this","onClick","Container","class","Form","onSubmit","nextButton","previousButton","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.27e5700c.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport Form from 'react-bootstrap/Form';\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Button from 'react-bootstrap/Button';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nclass MasterForm extends React.Component {\n  state = {\n    loading: true\n  }\n\n\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      currentStep: 1,\n      email:  '',\n      username: '',\n      password: '', \n    }\n  }\n\n  handleChange = event => {\n    const {name, value} = event.target\n    this.setState({\n      [name]: value\n    })    \n  }\n   \n  handleSubmit = event => {\n    event.preventDefault()\n    const { name, username, password } = this.state\n    alert(`Your registration detail: \\n \n           Name: ${name} \\n \n           Username: ${username} \\n\n           Password: ${password}`)\n  }\n  \n  _next = () => {\n    let currentStep = this.state.currentStep\n    currentStep = currentStep >= 2? 3: currentStep + 1\n    this.setState({\n      currentStep: currentStep\n    })\n  }\n    \n  _prev = () => {\n    let currentStep = this.state.currentStep\n    currentStep = currentStep <= 1? 1: currentStep - 1\n    this.setState({\n      currentStep: currentStep\n    })\n  }\n\n/*\n* the functions for our button\n*/\npreviousButton() {\n  let currentStep = this.state.currentStep;\n  if(currentStep !==1){\n    return (\n      <Button variant=\"secondary float-left\"\n       onClick={this._prev} >\n      Previous\n      </Button>\n    )\n  }\n  return null;\n}\n\nnextButton(){\n  let currentStep = this.state.currentStep;\n  if(currentStep <3){\n    return (\n      <Button variant=\"primary float-right\"\n       onClick={this._next} >\n      Next\n      </Button>        \n    )\n  }\n  return null;\n}\n\nrender() {\n  const { loading } = this.state;\n  \n  if(loading) { // if your component doesn't have to wait for an async action, remove this block \n    return null; // render null when app is not ready\n  }\n  return (\n    <div>I'm the app</div>\n  ); \n}\n\n\n    \n\n  render() {    \n    return (\n      <React.Fragment>\n\n      <Container>\n        <div>\n          <h1 class ='title'>Food Details</h1>\n        </div>\n      <div className = \"content\">\n      <Form onSubmit={this.handleSubmit}>\n      {/* \n        render the form steps and pass required props in\n      */}\n        <Step1 \n          currentStep={this.state.currentStep} \n          handleChange={this.handleChange}\n          name={this.state.name}\n        />\n        <Step2 \n          currentStep={this.state.currentStep} \n          handleChange={this.handleChange}\n          username={this.state.username}\n        />\n        <Step3 \n          currentStep={this.state.currentStep} \n          handleChange={this.handleChange}\n          password={this.state.password}\n        />\n         {this.nextButton()}\n        {this.previousButton()}\n       \n\n      </Form>\n\n      </div>\n    \n      </Container>\n\n      </React.Fragment>\n    );\n  }\n}\n\nfunction Step1(props) {\n  if (props.currentStep !== 1) {\n    return null\n  } \n  return(\n   \n    <div className=\"form-group\">\n        <label htmlFor=\"name\">Name</label>\n        <input\n          className=\"form-control\"\n          id=\"name\"\n          name=\"name\"\n          type=\"text\"\n          placeholder=\"Enter Name\"\n          value={props.name}\n          onChange={props.handleChange}\n          />\n   </div>\n          \n  );\n}\n\nfunction Step2(props) {\n  if (props.currentStep !== 2) {\n    return null\n  } \n  return(\n \n    \n    <div className=\"form-group\">\n      <label htmlFor=\"username\">Username</label>\n      <input\n        className=\"form-control\"\n        id=\"username\"\n        name=\"username\"\n        type=\"text\"\n        placeholder=\"Enter username\"\n        value={props.username}\n        onChange={props.handleChange}\n        />\n    </div>\n   \n  );\n}\n\nfunction Step3(props) {\n  if (props.currentStep !== 3) {\n    return null\n  } \n  return(\n    <React.Fragment>\n    <div className=\"form-group\">\n      <label htmlFor=\"password\">Password</label>\n      <input\n        className=\"form-control\"\n        id=\"password\"\n        name=\"password\"\n        type=\"password\"\n        placeholder=\"Enter password\"\n        value={props.password}\n        onChange={props.handleChange}\n        />      \n    </div>\n    <Button variant=\"success float-right\">Sign up</Button>\n    </React.Fragment>\n  );\n};\n\n\n\nexport default MasterForm;\n\n//ReactDOM.render(<MasterForm />, document.getElementById('root'))","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport MasterForm from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\n\n\nfunction demoAsyncCall() {\n  return new Promise((resolve) => setTimeout(() => resolve(), 2500));\n}\n\n\n\nReactDOM.render(\n<React.StrictMode>\n    <MasterForm />\n    </React.StrictMode>,\n   document.getElementById('root')\n   );\n\n\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}